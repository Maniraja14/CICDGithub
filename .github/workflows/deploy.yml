name: CI - Complie, Test, Deploy, and Reinit

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  codechecker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run CodeChecker
      uses: docker://foundeo/cfml-ci-tools:latest
      with:
        entrypoint: /opt/box/box
        args: codechecker run --verbose

  test:
    name: Run TestBox Tests
    runs-on: ubuntu-latest
    needs: codechecker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Java (required for CommandBox)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install CommandBox
        run: |
          curl -LO https://s3.amazonaws.com/downloads.ortussolutions.com/ortussolutions/commandbox/6.2.0/commandbox-debian-6.2.0.deb
          sudo dpkg -i commandbox-debian-6.2.0.deb
          box version

      - name: Install dependencies and run tests
        env:
            TESTKEY: ${{ vars.TESTKEY }}

        run: |
          box install
          box install testbox
          box start
          echo "box is started"
          box testbox run --directory=tests.specs > test-results.txt

          failedCount=$(grep -oP '\[Failed:\s+\K\d+' test-results.txt)
          if [ "$failedCount" -ne 0 ]; then
            echo "::error::Some tests failed"
            cat test-results.txt
            exit 1
          fi

          echo "All tests passed successfully"

  # ftp_deploy:
  #   name: FTP Deploy
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: FTP Deploy
  #       uses: SamKirkland/FTP-Deploy-Action@4.3.0
  #       with:
  #         server: ${{ vars.FTP_SERVER }}
  #         username: ${{ vars.FTP_USERNAME }}
  #         password: ${{ secrets.FTP_PASSWORD }}
  #         local-dir: ./
  #         exclude: |
  #           .git*
  #           .github*
  #           tests/*
  #           box.json
  #           commandbox-debian-6.2.0.deb

  # reinit:
  #   name: Reinitialize Application
  #   runs-on: ubuntu-latest
  #   needs: [ftp_deploy]  # Only run after successful deployment

  #   steps:
  #     - name: Send reinit request
  #       run: |
  #         echo "Reinitializing application..."
  #         response=$(curl -s -o /dev/null -w "%{http_code}" "${{ vars.REINIT_URL }}")
          
  #         if [ "$response" -eq 200 ]; then
  #           echo "Application reinitialized successfully"
  #         else
  #           echo "::error::Failed to reinitialize application. HTTP Status: $response"
  #           exit 1
  #         fi