name: CI - Test, Deploy, and Reinit

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    name: Run TestBox Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Java (required for CommandBox)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install CommandBox
        run: |
          curl -LO https://s3.amazonaws.com/downloads.ortussolutions.com/ortussolutions/commandbox/6.2.0/commandbox-debian-6.2.0.deb
          sudo dpkg -i commandbox-debian-6.2.0.deb
          box version

      - name: Install dependencies and run tests
        run: |
          box install
          box install testbox
          box start
          echo "box is started"
          box testbox run --directory=tests.specs --reporter=json > test-results.json

          # Check test results
          if [ $(grep -o '"Failed": 0' test-results.json | wc -l) -eq 0 ]; then
            echo "::error::Some tests failed"
            cat test-results.json
            exit 1
          fi
          echo "All tests passed successfully"

  deploy:
    name: FTP Deploy
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: ${{ secrets.FTP_DEPLOY_DIR }}/  # Should end with /
          exclude: |
            **/.git*
            **/.github*
            **/tests*
            **/test-results.json
            **/box.json
            **/commandbox-debian-6.2.0.deb

  reinit:
    name: Reinitialize Application
    runs-on: ubuntu-latest
    needs: deploy  # Only run after successful deployment

    steps:
      - name: Send reinit request
        run: |
          echo "Reinitializing application..."
          response=$(curl -s -o /dev/null -w "%{http_code}" "${{ secrets.REINIT_URL }}")
          
          if [ "$response" -eq 200 ]; then
            echo "Application reinitialized successfully"
          else
            echo "::error::Failed to reinitialize application. HTTP Status: $response"
            exit 1
          fi